spring:
  profiles:
    active:
      - local
#    include: common

---
spting:
  profile: common

spring:
  application:
    name: backend
  datasource:
    url: ${JDBC_DATABASE_URL:}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10

server:
  port: ${PORT:5001}
  #context-path: /back
  session:
    cookie:
      name: OAUTH2SESSION # This is to prevent cookie clash with other service as they run on the same host and context path

#auth-server: http://localhost:5004
#security:
#  oauth2:
#    client:
#      client-id: oauth2_client
#      client-secret: oauth2_client_secret
#    resource:
#      token-info-uri: ${auth-server}/oauth/check_token

#auth-server: http://localhost:5004/auth
auth-server: https://stswoon-fm-gateway.herokuapp.com/auth
security:
  basic:
    enabled: false
  oauth2:
    client:
      client-id: oauth2_client
      client-secret: oauth2_client_secret
      access-token-uri: ${auth-server}/oauth/token
      user-authorization-uri: ${auth-server}/oauth/authorize
      scope: read, write
      authorized-grant-types: authorization_code,refresh_token,password,client_credentials,implicit
      authenticationScheme: header
    resource:
      token-info-uri: ${auth-server}/oauth/check_token
      filter-order: 3 #magic


logging:
  level:
    #ROOT: DEBUG
    org.springframework.security: DEBUG
    nodomain.stswoon: DEBUG

createTestData: true
spring.jpa.show-sql: true

---
spting:
  profile: cloud

eureka:
  instance:
      #leaseRenewalIntervalInSeconds: 10
      #securePortEnabled: true
      #metadataMap:
      #    instanceId: ${spring.application.login}:${spring.application.instance_id:${server.port}}
  client:
    #registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${EUREKA:http://localhost:5000/eureka/}
#ribbon.IsSecure: true
#management.security.enabled: false

auth-server: https://stswoon-fm-gateway.herokuapp.com/auth

---
spring:
  profile: local
#  include: common

spring.jpa.properties.hibernate.dialect: nodomain.stswoon.financemanager.backend.config.SQLiteDialect
spring.jpa.hibernate.ddl-auto: create-drop
